<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">  
  <modelVersion>4.0.0</modelVersion>  
  <groupId>au.superdraftfantasy</groupId>  
  <artifactId>app</artifactId>
  <version>1.0-SNAPSHOT</version>  
  <properties> 
    <java.version>1.8</java.version>  
    <spock-core.version>1.2-groovy-2.5</spock-core.version>  
    <flyway-core.version>5.2.4</flyway-core.version>
    <frontend-src-dir>${project.basedir}/src/main/frontend</frontend-src-dir>
    <node.version>v12.16.1</node.version>
    <frontend-maven-plugin.version>1.9.1</frontend-maven-plugin.version>
  </properties>  
  <parent> 
    <groupId>org.springframework.boot</groupId>  
    <artifactId>spring-boot-starter-parent</artifactId>  
    <version>2.1.6.RELEASE</version> 
  </parent>
  <profiles>
    <profile>
      <id>dev</id>
      <properties>
        <activatedProperties>dev</activatedProperties>
      </properties>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
    </profile>
    <profile>
      <id>prod</id>
      <properties>
        <activatedProperties>prod</activatedProperties>
      </properties>
    </profile>
  </profiles>
  <dependencies> 
    <!-- Spring Dependencies Begin -->  
    <dependency> 
      <groupId>org.springframework.boot</groupId>  
      <artifactId>spring-boot-starter-web</artifactId> 
    </dependency>  
    <dependency> 
      <groupId>org.springframework.boot</groupId>  
      <artifactId>spring-boot-starter-data-jpa</artifactId> 
    </dependency>  
    <dependency> 
      <groupId>org.springframework.boot</groupId>  
      <artifactId>spring-boot-starter-test</artifactId>  
      <scope>test</scope> 
    </dependency>  
    <!-- Spring Dependencies End -->  
    <!-- Security dependencies Begin -->  
    <dependency> 
      <groupId>org.springframework.boot</groupId>  
      <artifactId>spring-boot-starter-security</artifactId> 
    </dependency>  
    <dependency> 
      <groupId>io.jsonwebtoken</groupId>  
      <artifactId>jjwt</artifactId>  
      <version>0.9.1</version> 
    </dependency>  
    <!-- Security dependencies End-->  
    <!-- WebSocket Dependencies Start -->  
    <dependency> 
      <groupId>org.springframework</groupId>  
      <artifactId>spring-websocket</artifactId> 
    </dependency>  
    <dependency> 
      <groupId>org.springframework</groupId>  
      <artifactId>spring-messaging</artifactId> 
    </dependency>  
    <dependency> 
      <groupId>org.springframework.security</groupId>  
      <artifactId>spring-security-messaging</artifactId> 
    </dependency>  
    <!-- WebSocket Dependencies End -->  
    <!-- Test Dependencies Begin -->  
    <dependency> 
      <groupId>org.spockframework</groupId>  
      <artifactId>spock-core</artifactId>  
      <version>${spock-core.version}</version>  
      <scope>test</scope> 
    </dependency>  
    <dependency> 
      <groupId>org.spockframework</groupId>  
      <artifactId>spock-spring</artifactId>  
      <version>${spock-core.version}</version>  
      <scope>test</scope> 
    </dependency>  
    <dependency> 
      <groupId>com.h2database</groupId>  
      <artifactId>h2</artifactId>  
      <scope>test</scope> 
    </dependency>  
    <!-- Test Dependencies End -->  
    <!-- DB Dependencies Start -->  
    <dependency> 
      <groupId>org.postgresql</groupId>  
      <artifactId>postgresql</artifactId>  
      <version>42.2.6</version> 
    </dependency>  
    <dependency> 
      <groupId>org.flywaydb</groupId>  
      <artifactId>flyway-core</artifactId>  
      <version>${flyway-core.version}</version> 
    </dependency>  
    <!-- DB Dependencies End -->  
    <!-- Lombok Dependencies Start -->  
    <dependency> 
      <groupId>org.projectlombok</groupId>  
      <artifactId>lombok</artifactId>  
      <version>1.18.8</version>  
      <scope>provided</scope> 
    </dependency>  
    <!-- Lombok Dependencies End -->  
    <!-- Swagger Dependencies Start -->  
    <dependency> 
      <groupId>io.springfox</groupId>  
      <artifactId>springfox-swagger2</artifactId>  
      <version>2.9.2</version> 
    </dependency>  
    <dependency> 
      <groupId>io.springfox</groupId>  
      <artifactId>springfox-swagger-ui</artifactId>  
      <version>2.9.2</version> 
    </dependency>  
    <!-- Swagger Dependencies End -->  
    <!-- ModelMapper Dependencies Start - For converting between Entity and DTO.-->  
    <dependency> 
      <groupId>org.modelmapper</groupId>  
      <artifactId>modelmapper</artifactId>  
      <version>2.3.2</version> 
    </dependency>  
    <!-- ModelMapper Dependencies End --> 
  </dependencies>  
  <build> 
    <finalName>app</finalName>
    <plugins> 
      <!-- SpringBoot Plugin - To enable boot with Maven -->  
      <plugin> 
        <groupId>org.springframework.boot</groupId>  
        <artifactId>spring-boot-maven-plugin</artifactId> 
      </plugin>  
      <!-- Groovy Test Plugin - To enable running of tests with Groovy. -->
      <plugin> 
        <groupId>org.codehaus.gmavenplus</groupId>  
        <artifactId>gmavenplus-plugin</artifactId>  
        <version>1.6</version>  
        <executions> 
          <execution> 
            <goals> 
              <goal>compileTests</goal> 
            </goals> 
          </execution> 
        </executions> 
      </plugin>  
      <!-- Surefire Plugin - Maven Plugin for running tests. -->
      <plugin> 
        <artifactId>maven-surefire-plugin</artifactId>  
        <version>3.0.0-M3</version>  
        <configuration> 
          <useFile>true</useFile>  
          <includes> 
            <include>**/*Spec*</include>
          </includes>  
          <skipTests>true</skipTests> 
        </configuration> 
      </plugin>
      <!-- Flyway Plugin - Used for running flyway scripts for tasks such as cleaning the DB. -->
      <plugin>
        <groupId>org.flywaydb</groupId>
        <artifactId>flyway-maven-plugin</artifactId>
        <version>8.5.0</version>
        <configuration>
          <configFiles>${project.basedir}/src/main/resources/flyway.conf</configFiles>
        </configuration>
      </plugin>
      <!-- Frontend Maven Plugin Start for building the FE as part of the BE Build. -->
      <!-- See guide here https://medium.com/@itzgeoff/including-react-in-your-spring-boot-maven-build-ae3b8f8826e -->
      <!--
      <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <version>${frontend-maven-plugin.version}</version>
        <configuration>
          <nodeVersion>${node.version}</nodeVersion>
          <workingDirectory>${frontend-src-dir}</workingDirectory>
          <installDirectory>${project.build.directory}</installDirectory>
        </configuration>
        <executions>
          <execution>
            <id>install node and npm</id>
            <goals>
              <goal>install-node-and-npm</goal>
            </goals>
            <phase>generate-resources</phase>
          </execution>
          <execution>
            <id>npm install</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <phase>generate-resources</phase>
            <configuration>
              <arguments>install</arguments>
            </configuration>
          </execution>
          <execution>
            <id>npm run build</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <arguments>run build</arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
      -->
      <!-- Frontend Maven Plugin End. -->
      <!-- Maven Resources Plugin Start to output the Frontend Build to the required location. -->
      <!--
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.0.1</version>
        <executions>
          <execution>
            <id>position-react-build</id>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <phase>prepare-package</phase>
            <configuration>
              <outputDirectory>${project.build.outputDirectory}/static</outputDirectory>
              <resources>
                <resource>
                  <directory>${frontend-src-dir}/build</directory>
                  <filtering>false</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      -->
      <!-- Maven Resources Plugin End. -->
    </plugins>
  </build>
  <!-- Repository for fetching the artifacts from Azure -->  
  <!-- <repositories>
    <repository> 
      <id>SuperDraftFantasy</id>  
      <url>https://pkgs.dev.azure.com/jwkumm/SuperDraftFantasy/_packaging/SuperDraftFantasy/maven/v1</url>  
      <releases> 
        <enabled>true</enabled> 
      </releases>  
      <snapshots> 
        <enabled>true</enabled> 
      </snapshots> 
    </repository> 
  </repositories>
  -->
  <!-- Repository to push the artifacts to Azure -->  
  <distributionManagement> 
    <repository> 
      <id>SuperDraftFantasy</id>  
      <url>https://pkgs.dev.azure.com/jwkumm/SuperDraftFantasy/_packaging/SuperDraftFantasy/maven/v1</url>  
      <releases> 
        <enabled>true</enabled> 
      </releases>  
      <snapshots> 
        <enabled>true</enabled> 
      </snapshots> 
    </repository> 
  </distributionManagement> 
</project>
