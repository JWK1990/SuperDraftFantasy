# Docker Compose file Reference (https://docs.docker.com/compose/compose-file/)

version: '3'

# Define services
services:
  # Frontend Service
  app-client:
    image: "jwk1990/superdraftfantasy:fe_new_test"
    ports:
      - "3000:80" # Map the exposed port 80 on the container to port 3000 on the host machine
    restart: always
    depends_on:
      - app-server
    networks:
      - frontend
  # App backend service
  app-server:
    # Configuration for building the docker image for the backend service
    image: "jwk1990/superdraftfantasy:be_new_test"
    ports:
      - "8080:8080" # Forward the exposed port 8080 on the container to port 8080 on the host machine
    restart: always
    depends_on:
      - db # This service depends on mysql. Start that first.
    environment: # Pass environment variables to the service
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/${DB_NAME}?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - backend
      - frontend

  # Database Service (Postgresql)
  db:
    image: "postgres"
    container_name: "postgres"
    ports:
      - "5432:5432" # Forward the exposed port 5432 on the container to port 5432 on the host machine
    restart: always
    environment:
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_ROOT_PASSWORD:${DB_ROOT_PASSWORD}
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - backend

# Volumes
volumes:
  db-data:

# Networks to be created to facilitate communication between containers
networks:
  backend:
  frontend:    
